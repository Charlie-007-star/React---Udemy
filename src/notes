 /* ---------------------------------- React --------------------------------- */

[*] React =>

       * It's a framework of front and actually a library of Javascript.

       * It only have one hmtl file and it have only one <div> and it's Id 
         is connected to another app named Js file.

       * And with the help of Babel it is compiler for react it converts
         every new version code in Js to old Js so that every browser can
         run this.   

       * And we wite Html codes in Js files It's called JSX.

       * With the help of Babel Internet explorer can also run our project.

       * ReactDOM.render(<h1>Hello, world!</h1>, document.getElementById('root'));

       * This one gets 3 arguments and the first two are passed, the first one 
         tells which is i want to show that's the <h1>, and the next one 
         is used to where it have to render that id="root" of Html page.

       * You can't pass two or more html tags in the parameter, So you have 
         to write it on another file and link.

       * Use only <div> or <> empty tag to perform render two or more html tags.

       * Studying the react app installing to build from scratch.

       * we can declare variable and connect in the Html tag using {} braces.

       * Eg: const name = "Sujin"  <h1>Hello {name}</h1>

       * Inside braces in Html we can write Js any syntax and can't write
         statements in that like if else.

       * syntaxes also used like <p>number {math.random()}</p>

       * To get every time new random number in refresh use
         = Math.floor(Math.random() * 10);

       * Difference between Js statements and expressions ?

       * Statements represent an action or command e.g print statements,
         assignment statements.

       * Expression is a combination of variables, operations and
         values that yields a result value eg: 5 * 5 = yields 25.

       * Pass two values like this <h1>Hello {fName +" "+ lName}</h1>  

       * Template literals Injecting strings into Js {`${fName} ${lName}`}

       * To get only Year var year = new Date().getFullYear();


[*] React Attributes And Styling =>
        

       * <script src="../src/index.js" type="text/JSX"></script>
         using this type Attributes to link the files.

       * contentEditable="true" - is a content we write inside the tag the 
         user can edit it.  
    
       * spellCheck="false" - it will never spellCheck that word.

       * Apply styling using the external file by 
         <link rel="stylesheet" href="./style.css">

       * You can style the html tags in CSS for styling.

       * You can store the link of the image in a variable and you can add
         it by <img src={image} /> like this. 

       * Easily grey scale the img by <img src={image + "?grayscale"} />
         to change the image to grey scale color.

       * In Html you style like inline through style="color: red", but in react
         you cannot pass the style like html string, You have to create the 
         Js object like this style={{color: "red"}} then this will work fine.

       * You can add css in inline style like Js camel case like if you want
         increase the font size through inline style you have to do it like this
         fontSize: "20px" and not like this font-size: "20px".

       * Inline styles are so important because it's easy to change the style
         of the html tags in react by time or anything.


[*] React Components =>  


        * React components are the building blocks of React apps.

        * React components are self-contained pieces of functionality that 
          can be rendered on their own.

        * React components are reusable pieces of code that can be used in 
          multiple places.

        * React components are written in Javascript and can be written in 
          either ES6 or ES5.

        * Writing components and functions use pascal case letters like 
          eg: function Header()  

        * ./Header.js means relative path to the file.

        *       